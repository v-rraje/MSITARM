{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 3,
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "AvailabilitySet": {
      "type": "string",
      "defaultValue": "AvSet",
      "minLength": 3,
      "metadata": {
        "description": "Name for the AvailabilitySet."
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "WEBILB",
      "minLength": 3,
      "metadata": {
        "description": "Name for the LoadBalancer."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "localAdminUserName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for domain joining"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "Size for the Virtual Machine."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "MicrosoftSQLServer"
      ],
      "metadata": {
        "description": "OS Image Publisher. https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Allowed Windows values: WindowsServer. Allowed SQL Values: SQL2012SP2-WS2012, SQL2012SP2-WS2012R2,SQL2014-WS2012R2, SQL2014SP1-WS2012R2, SQL2016CTP3-WS2012R2, SQL2016CTP3.1-WS2012R2, SQL2016CTP3.2-WS2012R2, SQL2016RC3-WS2012R2v2."
      }
    },
    "sku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "See Image publisher for options"
      }
    },
    "DiskConfig": {
      "type": "string",
      "defaultValue": "Win",
      "allowedValues": [
        "Win",
        "IIS",
        "SQLStd",
        "SQLPrem"
      ]
    },
    "DiskCount": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "Number of Disks for vm."
      }
    },
    "DiskSize": {
      "type": "int",
      "defaultValue": 200,
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "Description": "Azure VM DiskSize of the VM"
      }
    },
    "userImageStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Storage Account where the VM image(s) will be created"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The Storage Account where the VM image(s) will be created"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "snoozeDate": {
      "type": "string",
      "defaultValue": "1/1/15",
      "metadata": {
        "description": "Snooze date"
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "local admins that can login to the VMs. csv list of domain\\user"
      }
    },
    "SQLAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SQL SYS admins that can login to the Default SQL Instance instaqlled on the VM. csv list of domain\\user"
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",

     "branch": "beta",
    "folder": "/301-multi-vm-domain-join-WebILB-build-dsc/",
    "baseURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),variables('folder'))]",

    "availabilitySetName": "[parameters('AvailabilitySet')]",
    "DomainJoinzip": "scripts/DomainJoin.ps1.zip",
    "formatDiskszip": "scripts/FormatDataDisk.ps1.zip",
    "formatDiskstemplate": "nested/template-DataDisks.json",
    "diskarrayTemplate": "nested/DiskArray.json",
    "SetStaticIP": "nested/template-SetStaticIP.json",
    "loadBalancerName": "[parameters('loadBalancerName')]",

    "modulesUrl": "[concat(variables('BaseURL'),variables('DomainJoinzip'))]",
    "FormatDisksUrl": "[concat(variables('BaseURL'), variables('formatDiskstemplate'))]",
    "SetStaticIPUrl": "[concat(variables('BaseURL'),variables('SetStaticIP'))]",

    "vnetSubscriptionid": "[subscription().subscriptionId]",
    "vnetID": "[concat('/subscriptions/',variables('vnetSubscriptionid'),'/resourceGroups/',parameters('vnetResourceGroup'),'/providers/Microsoft.Network/virtualnetworks/',parameters('virtualNetwork'))]",
    "imageOffer": "[parameters('imageOffer')]",
    "imagePublisher": "[parameters('imagePublisher')]",
    "sku": "[parameters('sku')]",
    "nicName": "[parameters('vmName')]",

    "osDiskVhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'osDisk')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "autologonContent": "[concat('<AutoLogon><Password><Value>',parameters('localAdminPassword'),'</Value></Password><Domain>.</Domain><Enabled>true</Enabled><LogonCount>1</LogonCount><Username>',parameters('localAdminUserName'),'</Username></AutoLogon>')]",
    "firstLogonCommands": "<FirstLogonCommands><SynchronousCommand><CommandLine>netsh advfirewall firewall set rule group=&quot;Windows Management Instrumentation (WMI)&quot; new enable=Yes</CommandLine><Description>Update Firewall Settings</Description><Order>1</Order></SynchronousCommand><SynchronousCommand><CommandLine>logoff.exe</CommandLine><Description>Logoff</Description><Order>2</Order></SynchronousCommand></FirstLogonCommands>",
    "domainJoinOptions": 3,
    "vmExtensionName": "Microsoft.Powershell.DSC",
    "diskCaching": "None",
    "SQLStdDisk": {
      "vmSize": "[parameters('vmSize')]",
      "SQLServer": {
        "DataPath": "H:\\MSSqlServer\\MSSQL\\DATA",
        "LogPath": "O:\\MSSqlServer\\MSSQL\\DATA",
        "TempDbPath": "D:\\MSSqlServer\\MSSQL\\DATA",
        "backupPath": "E:\\MSSqlServer\\MSSQL\\Backup"
      },
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskLabel": "Data",
          "DiskSize": "[parameters('DiskSize')]"
        },
        "2": {
          "DiskName": "O",
          "DiskLabel": "Logs",
          "DiskSize": "[parameters('DiskSize')]"
        },
        "3": {
          "DiskName": "E",
          "DiskLabel": "Backups",
          "DiskSize": "[parameters('DiskSize')]"
        }
      },
      "vmDiskTemplate": "[concat(variables('BaseURL'), variables('diskarrayTemplate'))]"
    },
    "SQLPremDisk": {
      "vmSize": "[parameters('vmSize')]",
      "SQLServer": {
        "DataPath": "H:\\MSSqlServer\\MSSQL\\DATA",
        "LogPath": "O:\\MSSqlServer\\MSSQL\\DATA",
        "TempDbPath": "T:\\MSSqlServer\\MSSQL\\DATA",
        "backupPath": "E:\\MSSqlServer\\MSSQL\\Backup"
      },
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskLabel": "Data",
          "DiskSize": "[parameters('DiskSize')]"
        },
        "2": {
          "DiskName": "O",
          "DiskLabel": "Logs",
          "DiskSize": "[parameters('DiskSize')]"
        },
        "3": {
          "DiskName": "E",
          "DiskLabel": "Backups",
          "DiskSize": "[parameters('DiskSize')]"
        },
        "4": {
          "DiskName": "T",
          "DiskLabel": "TempDB",
          "DiskSize": "[parameters('DiskSize')]"
        }
      },
      "vmDiskTemplate": "[concat(variables('BaseURL'), variables('diskarrayTemplate'))]"
    },
    "WinDisk": {
      "vmSize": "[parameters('vmSize')]",
      "dataDisks": {
        "1": {
          "DiskName": "E",
          "DiskLabel": "Data",
          "DiskSize": "[parameters('DiskSize')]"
        }
      },
      "vmDiskTemplate": "[concat(variables('BaseURL'), variables('diskarrayTemplate'))]"
    },
    "IISDisk": {
      "vmSize": "[parameters('vmSize')]",
      "dataDisks": {
        "1": {
          "DiskName": "E",
          "DiskLabel": "Data",
          "DiskSize": "[parameters('DiskSize')]"
        }
      },
      "vmDiskTemplate": "[concat(variables('BaseURL'), variables('diskarrayTemplate'))]"
    },
    "DiskSKU": "[variables(concat(parameters('DiskConfig'),'Disk'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyindex(1),'-DiskArray')]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "DataDiskLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('DiskSKU').vmDiskTemplate]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[concat(parameters('vmName'),copyindex(1))]" },
          "diskCount": { "value": "[parameters('diskCount')]" },
          "diskCaching": { "value": "[variables('diskCaching')]" },
          "diskSizeGB": { "value": "[parameters('diskSize')]" },
          "userImageStorageAccountName": { "value": "[parameters('userImageStorageAccountName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyindex(1),'nic1')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]",
        "snoozeDate": "[parameters('snoozeDate')]"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AvailabilitySet"
      },
      "properties": {
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "LoadBalancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },

              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "loadDistribution": "SourceIPProtocol",
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),copyindex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]",
        "snoozeDate": "[parameters('snoozeDate')]"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),copyindex(1),'nic1')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('DiskSKU').vmSize]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'),copyindex(1))]",
          "adminUsername": "[parameters('localAdminUserName')]",
          "adminPassword": "[parameters('localAdminPassword')]",
          "windowsConfiguration": {
            "additionalUnattendContent": [
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "Autologon",
                "content": "[variables('autologonContent')]"
              },
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "FirstLogonCommands",
                "content": "[variables('firstLogonCommands')]"
              }
            ],
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('sku')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(parameters('vmName'),copyindex(1),'-osDisk')]",
            "vhd": {
              "uri": "[concat(variables('osDiskVhdName'),copyindex(1),'.vhd')]"
            }
          },
          "dataDisks": "[reference(concat(parameters('vmName'),copyindex(1),'-DiskArray')).outputs.dataDiskArray.value]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyindex(1),'nic1'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyindex(1),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "DSCExtensionLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),copyindex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.18",
        "settings": {
          "ModulesUrl": "[variables('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "DomainJoin.ps1\\DomainJoin",
          "Properties": {
            "Domain": "[parameters('DomainName')]",
            "LocalAccount": {
              "UserName": "[parameters('localAdminUserName')]",
              "Password": "PrivateSettingsRef:localPassword"
            },
            "DomainAccount": {
              "UserName": "[parameters('domainJoinUserName')]",
              "Password": "PrivateSettingsRef:DomainPassword"
            },
            "LocalAdmins": "[parameters('localAdmins')]",
            "SQLAdmins": "[parameters('SQLAdmins')]",
            "OU": "[parameters('ouPath')]"
          }
        },
        "protectedSettings": {
          "Items": {
            "LocalPassword": "[parameters('localAdminUserName')]",
            "DomainPassword": "[parameters('domainJoinPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyindex(1),'-FormatDataDisks')]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "FormatDataDisksLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('FormatDisksUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "DiskConfig": {
            "value": "[parameters('DiskConfig')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "DiskCount": {
            "value": "[parameters('DiskCount')]"
          },
          "DiskSize": {
            "value": "[parameters('DiskSize')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('vmName'),copyindex(1)),variables('vmExtensionName'))]"

      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyindex(1),'/BGInfo')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),copyindex(1))]"
      ],
      "copy": {
        "name": "BGInfoLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "settings": { },
        "protectedSettings": null
      }
    }
  ]
}

